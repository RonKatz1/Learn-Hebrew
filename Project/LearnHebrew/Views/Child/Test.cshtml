@model LearnHebrew.Models.TestModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
    body{
        background-color:aqua;

    }
    label {
        margin-right: 5px;
        margin-left: 5px;
    }

    footer {
        bottom: 0;
        width: 100%
    }
    .hidescreen {
        display: none;
    }
    .contentToDisplay {
        text-align: center;
        margin:45px;
    }
    #titleId {
        text-align: center;
        color:darkorange;
    }
    #questionsDiv {
        text-align: center;
        margin:auto;
        width:100%;
    }
    #resultDiv {
        text-align: center;
        margin: auto;
        width: 100%;
    }
    .soundBtn {
        margin: 15px;
        border-radius: 30px;
        font-size: 20px;
        cursor: pointer;
        background-color: transparent;
        outline: none;
    }
    .arrow {
        height: 30px;
        position: absolute;
    }

    #arrowDiv {
        position: relative;
    }
    #instructionId {
        cursor: pointer;
        color: goldenrod;
        margin-bottom: 5px;
        font-size: 30px;
    }
    #controlsDiv{
        margin:10px;
        display:none;
    }
    .myButton {
        box-shadow: inset 0px 1px 0px 0px #f9eca0;
        background: linear-gradient(to bottom, #f0c911 5%, #f2ab1e 100%);
        background-color: #f0c911;
        border-radius: 6px;
        border: 1px solid #e65f44;
        cursor: pointer;
        color: #c92200;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        padding: 1px 6px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #ded17c;
        margin-top: 10px;
        margin-bottom: 10px;
        outline: none;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #f2ab1e 5%, #f0c911 100%);
            background-color: #f2ab1e;
        }
</style>
<script>
    const gameLetter = '@Model.Letter';
    const gameName = '@Model.gameName';
    const contentNeeded ='@Model.contentNeeded';
    const questionAmount = @Model.questions.Count();
    const progressID = '@Model.childProgressID';
    let questionCounter = 0;
    let wrongAnswers = [];// object array of: { correct content id of current question, wrong answer the child gave to current question 
    let corresponsingContentID = [];
    let wrongAnswersCorrection = [];// array of the right answers the child did not know
    let words = [];// array of the words of the Test
    let points = 0;
    let arrowInterval;// the interval variable of the arrow animation
    
    $(document).ready(function () {
        windowResize();
        SetArrows();
        arrowInterval = setInterval(MoveArrows, 1000);

    })
    // This function resizes objects of the game according to the current size of the screen
    function windowResize() {
        $(window).resize(function () {
            $("#leftArrow").stop();
            $("#rightArrow").stop();
            $("#leftArrow").addClass("hidescreen");
            $("#rightArrow").addClass("hidescreen");
            setTimeout(
                function () {
                    $("#leftArrow").removeClass("hidescreen");
                    $("#rightArrow").removeClass("hidescreen");
                }, 2100);
            SetArrows();
        })
    }
    // This function enables the sound of the selected content number from the page
    function EnableSound(number) {
        let source = $("#source_" + number);
        let $sound = $("<audio>");
        $sound.attr("src", source.attr('src'));
        $sound[0].play();
    }
    function SendAnswer(correctWord, answerTextBox, answerButtonId) {
        $("#" + answerButtonId).attr("disabled", true);
        $("#" + answerButtonId).attr("value", "תשובתך נשלחה");
        let currentAnswer = $("#" + answerTextBox).val().trim();
        if (correctWord == currentAnswer) {
            points++;
        }
        else {
            //add wrong answer to wrongAnswerDiv and array of wrong answers and array of wrong Answers Correction 
            wrongAnswers.push(currentAnswer);
            wrongAnswersCorrection.push(correctWord);
        }
        words.push(correctWord);
        questionCounter++;
        if (questionCounter == questionAmount) {// the end of the test
            //remove question div and reveal result div and send results to db
            AddToWrongAnswerDiv();
            $("#pointsId").text(points);
            $("#resultDiv").removeClass("hidescreen");
            $("#questionsDiv").addClass("hidescreen");
            //SaveChildProgress();

        }
    }
    // This function groups the answer and result of the child to the selected content, also keeps track of number of answered contents for the end of the Test
    function RadioSendAnswer(correctWord, answerButtonId, questionContentID, radioName) {
        correctWord = correctWord.trim();
        let ele = document.getElementsByName(radioName);
        let currentAnswer;      
        for (let i = 0; i < ele.length; i++) {
            if (ele[i].checked) 
                currentAnswer = ele[i].value;              
        }
        if (currentAnswer == null)// if the child pressed without choosing radio button
            return;
        for (let i = 0; i < ele.length; i++) {
            ele[i].disabled = true;
        }
        $("#soundBtn_" + answerButtonId).attr("disabled", true);
        $("#button_" + answerButtonId).attr("disabled", true);// disable current send answer button
        $("#button_" + answerButtonId).attr("value", "תשובתך נשלחה");
        
        //$('input[name='radioName']:checked').val();

        //$('input[name='radioName']').attr('disabled', 'disabled');

        if (correctWord == currentAnswer) {
            points++;
        }
        else {
            //add wrong answer to wrongAnswerDiv and array of wrong answers and array of wrong Answers Correction 
            wrongAnswers.push(currentAnswer);
            corresponsingContentID.push(questionContentID);
            //wrongAnswers.push({
            //    contentID: questionContentID,
            //    wrongAnswer: currentAnswer
                
            //});
            wrongAnswersCorrection.push(correctWord);
        }
        words.push(correctWord);
        questionCounter++;
        if (questionCounter == questionAmount) {// the end of the Test
            AddToWrongAnswerDiv();// sending grouped answers and results to be presented to user
            $("#pointsId").text(points);// sending points earned by user on Test to be presented to user
            $("#resultDiv").removeClass("hidescreen");// reveal result div
            $("#questionsDiv").addClass("hidescreen");// remove question div
            SaveChildProgress();// send results to db
        }
    }
    function SaveChildProgress() {
        //here we will send the data , only if child is not guest
        if (progressID > 0) {
            @*$.post("@Url.Action("SaveChildProgress", "Child")" + "?wrongAnswers=" + wrongAnswers + "&corresponsingContentID=" + corresponsingContentID + "&wrongAnswersCorrection=" + wrongAnswersCorrection + "&progressID=" + progressID + "&gameLetter=" + gameLetter, function (data) {

            });*@

            $.ajax({
            url: '/Child/SaveChildProgress',           
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                WrongAnswers: wrongAnswers.length > 0 ? wrongAnswers : null,
                CorresponsingContentID: corresponsingContentID.length > 0 ? corresponsingContentID : null,
                ProgressID: progressID,
                GameLetter: gameLetter
            }),
            error: function (e, ts, et) {
                alert("error at test result" + ts);
            },
            success: function (data) {              
                                
            }
        });
        }
    }
    function AddToWrongAnswerDiv() {
        if (wrongAnswers.length == 0)
            return;
        else {
            for (let i = 0; i < wrongAnswers.length; i++) {
                let sentenceWrong = $("<span>");
                let sentenceRight = $("<span>");               
                //let wrong = wrongAnswers[i].wrongAnswer;
                let wrong = wrongAnswers[i];
                let right = wrongAnswersCorrection[i];
                sentenceWrong.text("התשובה שנרשמה היא: " + wrong + "   ");
                sentenceWrong.css('color', 'red');
                sentenceRight.text("התשובה הנכונה היא: " + right);
                sentenceRight.css('color', 'green');
                $("#wrongAnswerDiv").append(sentenceWrong);
                $("#wrongAnswerDiv").append(sentenceRight);
                $("#wrongAnswerDiv").append("<br/>");
            }
        }
    }
    // This function redirects user to the selected game with the chosent letter
    function GoToGame() {
        window.location.href = "@(Url.Action("GoToGame", "Child"))" + "?letter=" + gameLetter + "&name=" + gameName + "&needContent=" + contentNeeded;

    }
    // This function sets the location of the image arrows
    function SetArrows() {
        let x = $("#instructionId").position();
        x = x.left - $("#leftArrow").width() - $("#instructionId").width();
        let x2 = $("#instructionId").position();
        x2 = x2.left + ($("#instructionId").width() * 2);
        $("#leftArrow").css("left", x + "px");
        $("#rightArrow").css("left", x2 + "px");
    }
    // This function enables the movement of the image arrows
    function MoveArrows() {
        let $leftArrow = $("#leftArrow");
        let left = $("#instructionId").width();
        let leftTarget = parseInt($leftArrow.css("left")) + left;
        $leftArrow.animate({

            left: leftTarget

        }, {
                duration: 500,
                easing: "linear",
                complete: SetArrows

            });
        let $rightArrow = $("#rightArrow");
        let right = $("#instructionId").width();
        let rightTarget = parseInt($rightArrow.css("left")) - right;
        $rightArrow.animate({

            left: rightTarget

        }, {
                duration: 500,
                easing: "linear",
                complete: SetArrows

            });
    }
</script>

<body>
    @if (Model.questions != null && Model.questions.Count() > 0)
    {
        
    <section id="questionsDiv">
        <div id="titleId">
            <h1>מבחן מילים</h1>
            <h2>עבור כל שאלה בחר במילה המתאימה לתמונה</h2>
        </div>
        <div id="arrowDiv">
            <img id="leftArrow" class="arrow" src="~/Pictures/Game_17/arrowLeft.png" />
            <i id="instructionId" class="fa fa-volume-up"></i>
            <img id="rightArrow" class="arrow" src="~/Pictures/Game_17/arrowRight.png" />
        </div>
        @for (int i = 0; i < Model.questions.Count(); i++)
        {

            <h3>------------------------------------------------------------</h3>
            <div class="contentToDisplay">

                @{
                    var optionsWord = new List<string>();
                    if (Model.ContentOptions.ContainsKey(Model.questions[i].ContentID))
                    {
                        optionsWord = Model.ContentOptions[Model.questions[i].ContentID];
                    }

                }
                <div id='radioButtonDiv_@i'>
                    @foreach (var str in optionsWord)
                    {

                        if (Model.questions[i].Word.Equals(str))
                        {
                            <input type="radio" class='true' name='radio_@i' value=@str />
                            <label>@str</label>
                        }
                        else
                        {
                            <input type="radio" class='false' name='radio_@i' value=@str />
                            <label>@str</label>
                        }
                    }
                </div>
                @*<div>
                    <input type="text" id='textbox_@i' placeholder="רשום את תשובתך כאן" />
                </div>*@
                <div class="ContentPhoto" style="width:100px; height:100px; background-image:url('@(BLL.Services.ContentServices.GetFilePath(Model.questions[i].Data.PhotoFile))')">

                </div>

                <div id="controlsDiv">
                    <audio id='controls_@i' controls>
                        <source id='source_@i' src="@Url.Content(BLL.Services.ContentServices.GetFilePath(Model.questions[i].Data.VoiceFile))" type="audio/ogg">
                    </audio>
                </div>
                <div id="sound_@i">
                    <input id='soundBtn_@i' class="soundBtn" type="button" value="🎵" onclick="EnableSound('@i')" />

                </div>

                @*<input type="button" value="אשר" class="confirmBtn slick-next" id='button_@i' onclick="SendAnswer('@Model.questions[i].Data.UnDotedWord', 'textbox_@i','button_@i')" />*@
                <input class="myButton" type="button" value="שליחת תשובה" id='button_@i' onclick="RadioSendAnswer('@Model.questions[i].Word', '@i', '@Model.questions[i].ContentID','radio_@i')" />


            </div>
        }
        <h3>------------------------------------------------------------</h3>

    </section>
    }
    else
    {
        <h3>אין שאלות </h3>
    }
        <div id="resultDiv" class="hidescreen">
            <h3>זהו סוף המבחן, במידה וטעית בשאלה מסויימת היא תופיע למטה</h3>
            <h3>ציונך במבחן:<span id="pointsId"></span></h3>

            <div id="wrongAnswerDiv"></div>
            <input class="myButton" id="buttonGo" type="button" value="מעבר למשחק" onclick="GoToGame()" />

        </div>
</body>   
<style>

    .ContentPhoto {
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
        padding:10px;
        border:5px solid black;
    }

    #ConfirmContentsContainer {
        width: 80%;
        margin: auto;
        text-align: center;
        direction: ltr;
    }

    .ContentPhoto {
        margin: auto;
    }

    
    
</style>
