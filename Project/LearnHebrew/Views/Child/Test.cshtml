@model LearnHebrew.Models.TestModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
    body{
        background-color:aqua;

    }
    label {
        margin-right: 5px;
        margin-left: 5px;
    }
    .hidescreen {
        display: none;
    }
    .contentToDisplay {
        width: 100%;
        text-align: center;
        margin:45px;
    }
    #titleId {
        text-align: center;
        color:darkorange;
    }
    #questionsDiv {
        text-align: center;
        margin:auto;
        width:100%;
    }
    #resultDiv {
        text-align: center;
        margin: auto;
        width: 100%;
    }
</style>
<script>
    const gameLetter = '@Model.Letter';
    const gameName = '@Model.gameName';
    const contentNeeded ='@Model.contentNeeded';
    const questionAmount = @Model.questions.Count();
    const progressID = '@Model.childProgressID';
    let questionCounter = 0;
    let wrongAnswers = [];// object array of: { correct content id of current question, wrong answer the child gave to current question 
    let corresponsingContentID = [];
    let wrongAnswersCorrection = [];// array of the right answers the child did not know
    //let correctAnswers = [];// array of the correct answers the child gave
    let words = [];
    let points = 0;

   
    function SendAnswer(correctWord, answerTextBox, answerButtonId) {
        $("#" + answerButtonId).attr("disabled", true);
        $("#" + answerButtonId).attr("value", "תשובתך נשלחה");
        let currentAnswer = $("#" + answerTextBox).val().trim();
        if (correctWord == currentAnswer) {
            points++;
        }
        else {
            //add wrong answer to wrongAnswerDiv and array of wrong answers and array of wrong Answers Correction 
            wrongAnswers.push(currentAnswer);
            wrongAnswersCorrection.push(correctWord);
        }
        words.push(correctWord);
        questionCounter++;
        if (questionCounter == questionAmount) {// the end of the test
            //remove question div and reveal result div and send results to db
            AddToWrongAnswerDiv();
            $("#pointsId").text(points);
            $("#resultDiv").removeClass("hidescreen");
            $("#questionsDiv").addClass("hidescreen");
            //SaveChildProgress();

        }
    }
    function RadioSendAnswer(correctWord, answerButtonId, questionContentID, radioName) {
        correctWord = correctWord.trim();
        //let selectedRadio = $("#" + radioDivId + "input[type='radio']:checked");
        //if (selectedRadio.length <= 0) {// child pressed without choosing radio button
           // return;
        //}
        // else he did choose an answer from radio buttons
        //let currentAnswer = selectedRadio.val();// get value of selected radio button
        let ele = document.getElementsByName(radioName);
        let currentAnswer;      
        for (let i = 0; i < ele.length; i++) {
            if (ele[i].checked) 
                currentAnswer = ele[i].value;              
            //ele[i].disabled = true;
        }
        if (currentAnswer == null)// if the child pressed without choosing radio button
            return;
        for (let i = 0; i < ele.length; i++) {
            ele[i].disabled = true;
        }
        //$("#" + radioDivId + "input[type='radio']".attr("disabled", true));// disable all radio in div
        $("#" + answerButtonId).attr("disabled", true);// disable current send answer button
        $("#" + answerButtonId).attr("value", "תשובתך נשלחה");
        
        //$('input[name='radioName']:checked').val();

        //$('input[name='radioName']').attr('disabled', 'disabled');

        if (correctWord == currentAnswer) {
            points++;
        }
        else {
            //add wrong answer to wrongAnswerDiv and array of wrong answers and array of wrong Answers Correction 
            wrongAnswers.push(currentAnswer);
            corresponsingContentID.push(questionContentID);
            //wrongAnswers.push({
            //    contentID: questionContentID,
            //    wrongAnswer: currentAnswer
                
            //});
            wrongAnswersCorrection.push(correctWord);
        }
        words.push(correctWord);
        questionCounter++;
        if (questionCounter == questionAmount) {// the end of the test
            //remove question div and reveal result div and send results to db
            AddToWrongAnswerDiv();
            $("#pointsId").text(points);
            $("#resultDiv").removeClass("hidescreen");
            $("#questionsDiv").addClass("hidescreen");
            SaveChildProgress();

        }
    }
    function SaveChildProgress() {
        //here we will send the data , only if child is not guest
        if (progressID > 0) {
            @*$.post("@Url.Action("SaveChildProgress", "Child")" + "?wrongAnswers=" + wrongAnswers + "&corresponsingContentID=" + corresponsingContentID + "&wrongAnswersCorrection=" + wrongAnswersCorrection + "&progressID=" + progressID + "&gameLetter=" + gameLetter, function (data) {

            });*@

            $.ajax({
            url: '/Child/SaveChildProgress',           
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                WrongAnswers: wrongAnswers.length > 0 ? wrongAnswers : null,
                CorresponsingContentID: corresponsingContentID.length > 0 ? corresponsingContentID : null,
                ProgressID: progressID,
                GameLetter: gameLetter
            }),
            error: function (e, ts, et) {
                alert("error at test result" + ts);
            },
            success: function (data) {              
                                
            }
        });
        }
    }
    function AddToWrongAnswerDiv() {
        if (wrongAnswers.length == 0)
            return;
        else {
            for (let i = 0; i < wrongAnswers.length; i++) {
                let sentenceWrong = $("<span>");
                let sentenceRight = $("<span>");               
                //let wrong = wrongAnswers[i].wrongAnswer;
                let wrong = wrongAnswers[i];
                let right = wrongAnswersCorrection[i];
                sentenceWrong.text("התשובה שנרשמה היא: " + wrong + "   ");
                sentenceWrong.css('color', 'red');
                sentenceRight.text("התשובה הנכונה היא: " + right);
                sentenceRight.css('color', 'green');
                $("#wrongAnswerDiv").append(sentenceWrong);
                $("#wrongAnswerDiv").append(sentenceRight);
                $("#wrongAnswerDiv").append("<br/>");
            }
        }
    }
    function GoToGame() {
        window.location.href = "@(Url.Action("GoToGame", "Child"))" + "?letter=" + gameLetter + "&name=" + gameName + "&needContent=" + contentNeeded;

    }
</script>

<body>
    @if (Model.questions != null && Model.questions.Count() > 0)
    {
        
    <section id="questionsDiv">
        <div id="titleId">
            <h1>מבחן מילים</h1>
            <h2>עבור כל שאלה בחר במילה המתאימה לתמונה</h2>
        </div>
        @for (int i = 0; i < Model.questions.Count(); i++)
        {

        <div class="contentToDisplay">

            @{
                var optionsWord = new List<string>();
                if (Model.ContentOptions.ContainsKey(Model.questions[i].ContentID))
                {
                    optionsWord = Model.ContentOptions[Model.questions[i].ContentID];
                }

            }
            <div id='radioButtonDiv_@i'>
                @foreach (var str in optionsWord)
                {

                    if (Model.questions[i].Word.Equals(str))
                    {
                        <input type="radio" class='true' name='radio_@i' value=@str />
                        <label>@str</label>
                    }
                    else
                    {
                        <input type="radio" class='false' name='radio_@i' value=@str />
                        <label>@str</label>
                    }
                }
            </div>
            @*<div>
                <input type="text" id='textbox_@i' placeholder="רשום את תשובתך כאן" />
            </div>*@
            <div class="ContentPhoto" style="width:100px; height:100px; background-image:url('@(BLL.Services.ContentServices.GetFilePath(Model.questions[i].Data.PhotoFile))')">

            </div>
            <div>
                <audio controls>
                    <source src="@Url.Content(BLL.Services.ContentServices.GetFilePath(Model.questions[i].Data.VoiceFile))" type="audio/ogg">
                </audio>
            </div>


            @*<input type="button" value="אשר" class="confirmBtn slick-next" id='button_@i' onclick="SendAnswer('@Model.questions[i].Data.UnDotedWord', 'textbox_@i','button_@i')" />*@
            <input type="button" value="שליחת תשובה"  id='button_@i' onclick="RadioSendAnswer('@Model.questions[i].Word', 'button_@i', '@Model.questions[i].ContentID','radio_@i')" />


        </div>
        }
    </section>
    }
    else
    {
        <h3>אין שאלות </h3>
    }
        <div id="resultDiv" class="hidescreen">
            <h3>זהו סוף המבחן, במידה וטעית בשאלה מסויימת היא תופיע למטה</h3>
            <h3>ציונך במבחן:<span id="pointsId"></span></h3>

            <div id="wrongAnswerDiv"></div>
            <input id="buttonGo" type="button" value="מעבר למשחק" onclick="GoToGame()" />

        </div>
</body>   
<style>

    .ContentPhoto {
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
        
    }

    #ConfirmContentsContainer {
        width: 80%;
        margin: auto;
        text-align: center;
        direction: ltr;
    }

    .ContentPhoto {
        margin: auto;
    }

    
    
</style>
