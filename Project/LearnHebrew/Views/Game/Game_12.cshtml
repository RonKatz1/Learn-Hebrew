@{
    Layout = null;
}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
    section {
        width: 58%;
        height: 68%;
        background-color:white;
        position: relative;
        margin: auto;
    }

    #user {
        width: 7%;
        height: 9%;
        top: 88%;
        left: 45%;
        position: absolute;
    }

    .enemy {
        width: 6%;
        height: 6%;
        position: absolute;
    }

    #endGameScreen {
        
        height: 50%;
    }


    

    .hidescreen {
        display: none;
    }
    body {
        background-image: url('../../Pictures/Game_12/chef_kitchen.PNG');
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }
    .buttonClass {
        
        border-radius: 12px;
        color: gold;
        font-size: large;
        background-color: hotpink
    }
    #scoreId {
        top: 0%;
        left: 93%;
        position: absolute;
        font-size: x-large;
        color: gold;
    }
    #heartDiv {
        top: 0%;
        left: 3%;
        position: absolute;
    }
    .heart {
        opacity: 0.7;
        width: 7%;
        
        
    }
</style>
<script>
    var move = 25;//setting moving distance per move for user
    var $User;//placeholder  for the user in every new game
    
    var alienTime = 10000;
    var alienSpawnTime = 3000;//time of spawning enemies
    var gameoverIndicator;//interval animation of spawning enemies
    var validLetters;
    var invalidLetters;
    var savedTop;
    var savedBottom;
    var lives = 3;
    $(document).ready(function () {
        
        validLetters = ["/Pictures/Game_12/lamad1.PNG", "/Pictures/Game_12/lamad2.PNG", "/Pictures/Game_12/lamad3.PNG"];
        
    })
    function StartGame() {
        $User = $("#user");//linking placeholder to user in current game
        savedTop = parseInt($User.css("top"));
        savedBottom = parseInt($User.css("top"));
        $("body").keydown(userKey_Options);
        gameoverIndicator = setInterval(createEnemy, alienSpawnTime);
        FillHearts();
        $("#buttonId").addClass("hidescreen");
    }
    function userKey_Options() {
        switch (window.event.keyCode) {
            case (37):// left keyboard was pressed = moving the user one move to the left
                MoveLeft();
                break;
            case (39):// right keyboard was pressed = moving the user one move to the right
                MoveRight();
                break;
            case (38)://up keyboard was pressed = moving the user one move up
                MoveUp();
                break;
            case (40)://down keyboard was pressed = moving the user one move down
                MoveDown();
                break;
        }
    }
    function MoveUp() {
        MoveUserAxisY(-1 * move);
    }
    function MoveDown() {
        MoveUserAxisY(move);
    }
    function MoveLeft() {
        MoveUserAxisX(-1 * move);
    }
    function MoveRight() {
        MoveUserAxisX(move);
    }
    function MoveUserAxisY(axisY) {
        var currentPosition = parseInt($User.css("top"));//getting current position of user
        var newPosition = currentPosition + axisY;//calculating new position of user

        if (newPosition >= 0 && newPosition <= (parseInt($("#sectionId").css("height")) - parseInt($User.css("height"))))
            $User.css("top", newPosition + "px");//moving user to new position

    }
    function MoveUserAxisX(axisX) {
        var currentPosition = parseInt($User.css("left"));//getting current position of user
        var newPosition = currentPosition + axisX;//calculating new position of user

        if (newPosition >= 0 && newPosition <= (parseInt($("#sectionId").css("width")) - parseInt($User.css("width"))))
            $User.css("left", newPosition + "px");//moving user to new position

    }
    function FillHearts() {
        $heartDiv = $("#heartDiv");
        for (var i = 0; i < lives; i++) {
            var $image = $("<img>");
            $image.attr("src", "/Pictures/Game_12/heart.png");
            $image.addClass("heart");
            $heartDiv.append($image);

        }
    }
    function deleteObject() {
        $(this).remove();
    }
    function createEnemy() {

        var $enemy = $("<img>");
        var enemyType = Math.floor((Math.random() * 10) + 1);

        if (enemyType >= 1 && enemyType <= 7) {
            var randomNumber = Math.floor((Math.random() * validLetters.length) + 0);
            $enemy.attr("src", validLetters[randomNumber]);

        }

        else {
            $enemy.attr("src", "/Pictures/Game_5/nuun.PNG");

        }
        $enemy.addClass("enemy");
        var axisX = randomEnemyAxisX();
        var axisY = randomEnemyAxisY();
        $enemy.css("top", axisY + "px");
        $enemy.css("left", axisX + "px");

        $("section").append($enemy);
        
        $enemy.animate({
            opacity:0.4

        }, {
                duration: alienTime,
                easing: "linear",
                progress: collisionCheck,
                complete: deleteObject

            });

    }
    function randomEnemyAxisX() {
        var limitLeft = (parseInt($User.css("width")) / 4);//floot
        var limitRight = parseInt($("section").css("width")) - (parseInt($User.css("width")));
        return Math.floor((Math.random() * limitRight) + limitLeft);
    }
    function randomEnemyAxisY() {
        var limitUp = ((parseInt($("section").css("top")) + (parseInt($User.css("height"))/4)));//floot
        var limitDown = savedBottom - (parseInt($User.css("height")));
        return Math.floor((Math.random() * limitDown) + limitUp);
    }
    function collisionCheck() {
        var $enemy = $(this);//getting the current enemy
        if (checkIntersection($User, $enemy)) {
            enemyDestroyed($enemy);
            MouthAnimation();
            
            $enemy.stop();
            $enemy.remove();
        }
    }
    function MouthAnimation() {
        $User.attr("src", "/Pictures/Game_12/mouth_closed.png");
        setTimeout(function () { $User.attr("src", "/Pictures/Game_12/mouth.png"); }, 1000);
        //put sound eating here
            
    }
    function checkIntersection($x, $y) {
        if ($x == undefined || $y == undefined) return false;
        xLeft = parseInt($x.css("left"));
        xTop = parseInt($x.css("top"));
        xRight = xLeft + parseInt($x.css("width"));
        xBottom = xTop + parseInt($x.css("height"));

        yLeft = parseInt($y.css("left"));
        yTop = parseInt($y.css("top"));
        yRight = yLeft + parseInt($y.css("width"));
        yBottom = yTop + parseInt($y.css("height"));

        return ((xLeft >= yLeft && xLeft <= yRight || yLeft >= xLeft && yLeft <= xRight) && (xTop <= yBottom && xTop >= yTop || yTop <= xBottom && yTop >= xTop));
    }
    function enemyDestroyed($enemy) {
        var indicator = false;
        CreateSound();
        for (var i = 0; i < validLetters.length; i++) {
            if ($enemy.attr('src') == validLetters[i]) {
                $("#scoreId").text(parseInt($("#scoreId").text()) + 1);
                indicator = true;
                break;
            }



        }
        if (!indicator) {
            lives--;
            RemoveHeart();
        }
        if (lives == '0') {
            GameOver();
        }
        //if (jQuery.inArray(($enemy.attr('src'), validLetters) != -1)) {
        //    $("#score").text(parseInt($("#score").text()) + 1);

        //}
        //else {
        //    $("#life").text(parseInt($("#life").text()) - 1);
        //    if ($("#life").text() == '0')
        //        GameOver();
        //}
    }
    function RemoveHeart() {     
        $("#heartDiv").empty();
        FillHearts();
    }
    function CreateSound() {
        let $sound = $("<audio>");
        $sound.attr("src", "/Audio/Game_12/eat.mp3");

        $sound[0].play();
    }
    function GameOver() {
        clearInterval(gameoverIndicator);
        //do popoup here to let the user go back to alphabet
        $("#sectionId").addClass("hidescreen");
        //$("#tableId").addClass("hidescreen");
        $("#finalScore").text($("#scoreId").text());
        $("#endGameScreen").removeClass("hidescreen");
    }
    function GoToAlphabet() {
         window.location.href = "@(Url.Action("ReturnToAlphabet", "Child"))";
    }
</script>

<body>
    <div style="text-align:center">
        <h1 style="color:gold"> אכילת אותיות </h1>
        <h2 style="color:gold">עבור שמיעת הוראות המשחק לחץ על סימן השמיעה למטה, להתחלת המשחק לחץ על כפתור התחלה</h2>
        <i id="explanationId" style="color:gold" class="fa fa-volume-up"></i>
        <br />
        <br />
        <input id="buttonId" class="buttonClass" type="button" value="התחלה" onclick="StartGame()" />
    </div>
    <br />
    <section id="sectionId">
        <div id="heartDiv"></div>
        <p id="scoreId">0</p>
        <img id="user" src="~/Pictures/Game_12/mouth.png" />
    </section>

    

    
    <div style="z-index:90;text-align:center" id="endGameScreen" class="hidescreen">
        <h3>ניקוד: <span id="finalScore"></span></h3>
        <br />
        <input class="buttonClass" type="button" value="חזרה לעמוד אותיות" onclick="GoToAlphabet()" />

    </div>
</body>