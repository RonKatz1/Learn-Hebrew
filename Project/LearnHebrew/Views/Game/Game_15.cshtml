@model LearnHebrew.Models.GameInformationModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>


@{
    // after connecting to real contents - change this list to contents list

    var wordList = new List<string>();
    if (Model.Contents != null && Model.Contents.Count() > 3)
    {
        wordList = Model.Contents.Select(c => c.Data.UnDotedWord).ToList();
    }
    else
    {
        wordList.Add("ספר");
        wordList.Add("דלת");
        wordList.Add("מחברת");
        wordList.Add("ארון");
        wordList.Add("פסנתר");
        wordList.Add("ילד");
        wordList.Add("ילדה");
    }

    //var wordDict = new Dictionary<string, string>();
    //if(Model.Contents != null && Model.Contents.Count() > 3)
    //{
    //    wordDict = Model.Contents.ToDictionary(c => c.Word, c => c.Data.UnDotedWord);
    //}
    //else
    //{
    //    wordDict.Add("סֵפֶר", "ספר");
    //    wordDict.Add("מְחַבֶּרֶת", "מחברת");
    //    wordDict.Add("אָרוֹן", "ארון");
    //}



    var alphabet = new List<char>();
    alphabet.Add('א');
    alphabet.Add('ב');
    alphabet.Add('ג');
    alphabet.Add('ד');
    alphabet.Add('ה');
    alphabet.Add('ו');
    alphabet.Add('ז');
    alphabet.Add('ח');
    alphabet.Add('ט');
    alphabet.Add('י');
    alphabet.Add('כ');
    alphabet.Add('ל');
    alphabet.Add('מ');
    alphabet.Add('נ');
    alphabet.Add('ס');
    alphabet.Add('ע');
    alphabet.Add('פ');
    alphabet.Add('צ');
    alphabet.Add('ק');
    alphabet.Add('ר');
    alphabet.Add('ש');
    alphabet.Add('ת');
    alphabet.Add('ץ');
    alphabet.Add('ף');
    alphabet.Add('ך');
    alphabet.Add('ן');


    //char[] arr = { 'א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע', 'פ', 'צ', 'ק', 'ר', 'ש', 'ת', 'ץ', 'ף', 'ך' };
    var wordCount = wordList != null && wordList.Count() > 0 ? wordList.Count() : 0;
    //var wordCount = wordDict != null && wordDict.Count() > 0 ? wordDict.Count() : 0;
    int randNum = 0;
    if (wordCount > 0)
    {
        Random rnd = new Random();
        randNum = rnd.Next(0, wordCount - 1);
    }
    var chosenWord = wordList[randNum];
    //var chosenWordDoted = wordDict.Keys.ToList()[randNum];
    //var chosenWord = wordDict[wordDict.Keys.ToList()[randNum]];

    //var CorrectGuesses = 0;
    //var WrongGuesses = 0;
}

<script>

    var CorrectGuesses = 0;
    var WrongGuesses = 0;
    var points = 100;

    function CheckIfLetterCorrect(letter) {

        //$("#LetterBox_" + letter).css("background-color", "red");

        var word = "@(chosenWord)";
        var letterExistsInWord = false;
        var letterIndex = "";

        for (var i = 0; i < word.length; i++) {
            if (word[i] == letter) {
                letterExistsInWord = true;
                if (letterExistsInWord) {
                    CorrectGuesses++;
                }
                letterIndex += i.toString();
            }
        }

        if (letterExistsInWord) {
            $("#LetterBox_" + letter).css("background-color", "green");
            $("#LetterBox_" + letter).css("pointer-events", "none");

            //CorrectGuesses++;

            var letterIndexes = letterIndex.split('');
                for (var i = 0; i < letterIndexes.length; i++) {
                $("#LetterIndex_" + letterIndex[i]).css("display", "block");
                }

                if (CorrectGuesses == word.length) {
                    $(".FinishedGameContainer").show();
                    $("#GameFinished").show();
                    var totalPoints = points - (10 * WrongGuesses);
                    $(".points").html("הניקוד שלך הוא: " + totalPoints.toString());
                    $(".LetterBox").css("pointer-events", "none");
            }
        }
        else {
            $("#LetterBox_" + letter).css("background-color", "red");
            $("#LetterBox_" + letter).css("pointer-events", "none");


            WrongGuesses++;
            if (WrongGuesses > 10) {
                $(".FinishedGameContainer").show();
                $("#GameOver").show();
                $(".LetterBox").css("pointer-events", "none");
            }
            else {
                $("#hangman_" + WrongGuesses).show();
            }
        }
    }



    $(document).ready(function () {
        let obj = document.createElement("audio");
        obj.src = "/Audio/Game_15/explain.mp4";
        obj.volume = 0.3;
        obj.autoPlay = false;
        obj.preLoad = true;
        obj.controls = true;

        $("#instructionId").click(function () {
            obj.play();
        });
    });


    function StartGame() {
        $(".mainGameContainer").show();
    }

    function GoToAlphabet() {
        window.location.href = "@(Url.Action("ReturnToAlphabet", "Child"))";
    }
</script>

<div style="text-align:center">
    <h2>האיש התלוי</h2>
    <h4 id="secondTitle">עבור שמיעת הוראות המשחק לחץ על סימן השמיעה למטה, להתחלת המשחק לחץ על כפתור התחלה</h4>
    <i id="instructionId" class="fa fa-volume-up" style="display:block;"></i>
    <input id="buttonId" class="myButton" type="button" value="התחלה" onclick="StartGame()" />
    <input id="buttonRet" class="myButton" type="button" value="חזרה לעמוד אותיות" onclick="GoToAlphabet()" />

</div>


<div class="FinishedGameContainer" style="display:none;">
    <div id="GameOver" style="display:none">
        <h1 style="color:red">משחק נגמר !</h1>
    </div>
    <div id="GameFinished" style="display:none">
        <h1 style="color:green">סיימת את המשחק !</h1>
        <h1 class="points" style="color:green"></h1>
    </div>
</div>

<div class="mainGameContainer" style="display:none;">

    <div id="LettersContainer">

        @foreach (var letter in alphabet)
        {
            <div id="LetterBox_@(letter)" class="LetterBox" onclick="CheckIfLetterCorrect('@(letter)')" style="cursor:pointer;">
                @letter
            </div>
        }

    </div>


    <div id="WordLinesContainer">
        @{
            var count = 0;
        }

        @*@for (var i = 0; i < chosenWordDoted.Length; i++)
            {
                <div class="wordLine">
                    <span id="LetterIndex_@(count++)" class="wordLineLetter">
                        @chosenWordDoted[i]
                    </span>
                </div>
            }*@

        @foreach (var letter in chosenWord.ToCharArray())
        {
            <div class="wordLine">
                <span id="LetterIndex_@(count++)" class="wordLineLetter">
                    @letter
                </span>
            </div>
        }

    </div>

    <div id="HangmanContainer">
        <div id="hangman_1" class="hangmanClass"></div>
        <div id="hangman_2" class="hangmanClass"></div>
        <div id="hangman_3" class="hangmanClass"></div>
        <div id="hangman_4" class="hangmanClass"></div>
        <div id="hangman_5" class="hangmanClass"></div>
        <div id="hangman_6" class="hangmanClass"></div>
        <div id="hangman_7" class="hangmanClass"></div>
        <div id="hangman_8" class="hangmanClass"></div>
        <div id="hangman_9" class="hangmanClass"></div>
        <div id="hangman_10" class="hangmanClass"></div>
    </div>

</div>

@*<div id="GameOver" style="display:none">
    <h1 style="color:red">משחק נגמר !</h1>
</div>
<div id="GameFinished" style="display:none">
    <h1 style="color:green">סיימת את המשחק !</h1>
</div>*@



<style>
    .FinishedGameContainer{
        text-align:center;
        margin:25px;
    }

    .myButton {
        background: linear-gradient(to bottom, #f0c911 5%, blueviolet 100%);
        /*background: linear-gradient(to bottom, #80adff 5%, #fffbe9 100%);*/
        background-color: blueviolet;
        border-radius: 6px;
        border: 1px solid #e65f44;
        cursor: pointer;
        color: forestgreen;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        padding: 1px 6px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #ded17c;
        margin-top: 10px;
        margin-bottom: 10px;
        outline: none;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #f2ab1e 5%, #f0c911 100%);
            /*background: linear-gradient(to bottom, #80adff 5%, #fffbe9 100%);*/
            /*background: linear-gradient(to bottom, #65e3ff 5%, #00c4ff 100%);*/
            background-color: #f2ab1e;
        }



    #LettersContainer {
        width: 80%;
        background: lightgrey;
        margin: auto;
    }

    .LetterBox {
        display: inline-block;
        margin: 5px;
        width: 35px;
        height: 35px;
        text-align: center;
        background-color: white;
        border-radius: 5px;
        font-size: 23px;
    }

    .HangmanCanvas {
        border: 1px solid black;
    }

    #WordLinesContainer {
        width: 80%;
        margin: auto;
        text-align: center;
    }

    .wordLine {
        display: inline-block;
        width: 20px;
        height: 30px;
        margin: 20px 20px 30px;
        border-bottom: 1px solid black;
        position: relative;
    }

    #HangmanContainer {
        width: 600px;
        height: 400px;
        border: 1px solid;
        margin: auto;
        position: relative;
    }

    .wordLineLetter {
        display: none;
        position: absolute;
        font-size: 30px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .hangmanClass {
        position: absolute;
        border: 1px solid black;
        display: none;
    }

    #hangman_1 {
        bottom: 40px;
        left: 40px;
        width: 60%;
        height: 10px;
        background-color: black;
    }

    #hangman_2 {
        bottom: 40px;
        left: 100px;
        width: 10px;
        height: 80%;
        background-color: black;
    }

    #hangman_3 {
        bottom: 90%;
        left: 100px;
        width: 200px;
        height: 10px;
        background-color: black;
    }

    #hangman_4 {
        left: 44%;
        bottom: 77.5%;
        height: 50px;
    }

    #hangman_5 {
        left: 40%;
        bottom: 65%;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: 4px solid black;
    }

    #hangman_6 {
        background-color: black;
        left: 260px;
        bottom: 40%;
        height: 100px;
        width: 5px;
    }

    #hangman_7 {
        width: 5px;
        height: 70px;
        left: 290px;
        bottom: 210px;
        transform: rotate(60deg);
        background-color: black;
    }

    #hangman_8 {
        width: 5px;
        height: 70px;
        left: 230px;
        bottom: 210px;
        transform: rotate(120deg);
        background-color: black;
    }

    #hangman_9 {
        width: 5px;
        height: 70px;
        left: 285px;
        bottom: 105px;
        transform: rotate(130deg);
        background-color: black;
    }

    #hangman_10 {
        width: 5px;
        height: 70px;
        left: 235px;
        bottom: 105px;
        transform: rotate(50deg);
        background-color: black;
    }

    #MainDiv {
        width: 100%;
        height: 100vh;
    }

    body {
        height: unset;
        background: cyan;
    }
</style>