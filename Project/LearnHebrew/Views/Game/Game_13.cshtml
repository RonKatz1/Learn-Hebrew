@model LearnHebrew.Models.GameInformationModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
    body {
        background-image: url('../../Pictures/Game_13/stone-checker.png');
        background-position: center;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        background-attachment: fixed;
    }

    .footerClass {
        position: absolute;
        bottom: 0;
        width: 100%
    }
    footer {
        font-size: 0.6vw;
        font-weight: bold;
        
    }
    section {
        position: relative;
        width: 95%;
        height: 75%;
        margin: auto;
        cursor: url('../../Pictures/Game_13/target.png'),auto;
    }

    .letter {
        width: 4%;
        height: 6%;
        position: absolute;
    }

    .cockroach {
        width: 4%;
        height: 8%;
        position: absolute;
        animation: shake 0.5s;
        animation-iteration-count: infinite;
    }

    @@keyframes shake {
        0% {
            transform: translate(1px, 1px) rotate(0deg);
        }

        10% {
            transform: translate(-1px, -2px) rotate(-1deg);
        }

        20% {
            transform: translate(-3px, 0px) rotate(1deg);
        }

        30% {
            transform: translate(3px, 2px) rotate(0deg);
        }

        40% {
            transform: translate(1px, -1px) rotate(1deg);
        }

        50% {
            transform: translate(-1px, 2px) rotate(-1deg);
        }

        60% {
            transform: translate(-3px, 1px) rotate(0deg);
        }

        70% {
            transform: translate(3px, 1px) rotate(-1deg);
        }

        80% {
            transform: translate(-1px, -1px) rotate(1deg);
        }

        90% {
            transform: translate(1px, 2px) rotate(0deg);
        }

        100% {
            transform: translate(1px, -2px) rotate(-1deg);
        }
    }

    #endGameScreen {
        height: 50%;
    }

    .hidescreen {
        display: none;
    }

    .heart {
        opacity: 0.7;
        width: 2%;
    }

    #heartDiv {
        position: absolute;
        right: 0;
        top: 0;
        float: right;
        text-align: right;
    }

    #scoreId {
        margin-left: 15px;
        font-size: x-large;
        color: darkred;
    }

    .rotate90 {
        -webkit-transform: rotate(180deg);
        -moz-transform: rotate(180deg);
        -o-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
        transform: rotate(180deg);
    }
    .myButton {
        box-shadow: inset 0px 1px 0px 0px #f9eca0;
        background: linear-gradient(to bottom, #f0c911 5%, #f2ab1e 100%);
        background-color: #f0c911;
        border-radius: 6px;
        border: 1px solid #e65f44;
        cursor: pointer;
        color: #c92200;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        padding: 1px 6px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #ded17c;
        outline: none;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #f2ab1e 5%, #f0c911 100%);
            background-color: #f2ab1e;
        }

    #instructionId {
        cursor: pointer;
        color: goldenrod;
        margin-bottom: 5px;
        font-size: 30px;
    }
    #gameOverh {
        color: gold;
        margin-top: 30px;
        margin-bottom: 30px;
    }
    .gameOverBtn {
        margin-top: 10px;
        outline: none;
    }
    #silenceDiv {
        text-align: center;
    }

    #silenceBtn {
        margin: 15px;
        border-radius: 30px;
        font-size: 20px;
        cursor: pointer;
        background-color: transparent;
        outline: none;
    }

    .arrow {
        height: 30px;
        position: absolute;
    }

    #arrowDiv {
        position: relative;
    }
    #title {
        font-family: 'Miri';
    }

    #secondTitle {
        font-family: 'Gan';
    }
</style>
<script>
    let validLetters = [];// array of valid letter for the game, based on the user
    let cockroaches;// array of cockroach images
    let gameoverIndicator; // interval for spawning enemies until game is over
    let cockroachSpawn = 2000;// the time it takes for a cockroach to be created
    let cockroachSpeed = 8000;// the time it takes for a cockroach to be removed
    let lives = 10; // number of times a user can die in the game
    let gameStarted = false; // indicator for game started for not letting pressed enter
    let letterSpeed = 10000;// the time it takes a letter to remove itself
    let arrowInterval;// the interval variable of the arrow animation

    $(document).ready(function () {
        LoadGameInstruction();
        FillLetters();
        windowResize();
        SetArrows();
        arrowInterval = setInterval(MoveArrows, 1000);
        cockroaches = ["/Pictures/Game_13/cockroach1UD.png","/Pictures/Game_13/cockroach2UD.png"];
        $("body").keydown(userKey_Options);
    })
    // This function pre loads the game instructions
    function LoadGameInstruction() {
        let obj = document.createElement("audio");
        obj.src = "/Audio/Game_13/Game_13_instructions.mp4";
        obj.volume = 0.3;
        obj.autoPlay = false;
        obj.preLoad = true;
        obj.controls = true;

        $("#instructionId").click(function () {
            obj.play();
        });
    }
    // This function resizes objects on the screen  
    function windowResize() {
        $(window).resize(function () {
            $("#leftArrow").stop();
            $("#rightArrow").stop();
            $("#leftArrow").addClass("hidescreen");
            $("#rightArrow").addClass("hidescreen");
            setTimeout(
                function () {
                    $("#leftArrow").removeClass("hidescreen");
                    $("#rightArrow").removeClass("hidescreen");
                }, 2100);
            SetArrows();
        })
    }
    //This function gets the path of the selected letter images
    function FillLetters() {
        $.ajax({
            url: '/Child/GetGameLetters' + '/' + '?Letter=@Model.Letter',           
            type: 'GET',
            dataType: 'json',
            error: function (e, ts, et) {
                alert("error at GetGameLetters" + ts);
            },
            success: function (data) {              
                for (let i = 0; i < 5; i++) 
                    validLetters.push("/Pictures/Alphabet/" + data.ValidLetterName[i]);                                             
            }
        });
    }
    //This function enables the user movement
    function userKey_Options() {
        switch (window.event.keyCode) {
            case (13):// enter was pressed
                if (!gameStarted) {
                    StartGame();
                    gameStarted = true;
                }
                break;
        }
    }
    // This funcion starts the game when the "התחלה" button is clicked
    function StartGame() {
        gameStarted = true;
        RemoveArrows();
        $("#buttonId").addClass("hidescreen");
        $("#buttonRet").removeClass("hidescreen");
        FillHearts();
        LoadSoundAndPicture();
        gameoverIndicator = setInterval(createCockroach, cockroachSpawn);
    }
    // This function pre loads the sounds and pictures that are used in the game
    function LoadSoundAndPicture() {
        new Audio("/Audio/Game_13/gun_fire2.mp3").load();
        for (let i = 0; i < validLetters.length; i++) 
            fetch(validLetters[i]);              
    }
    // This funcion sets up the game hearts (lives)
    function FillHearts() {
        $heartDiv = $("#heartDiv");
        for (let i = 0; i < lives; i++) {
            let $image = $("<img>");
            $image.attr("src", "/Pictures/Game_16/heart.png");
            $image.addClass("heart");
            $heartDiv.append($image);

        }
    }
    // This funcion creates a "cockroach" image
    function createCockroach() {//the assumption is all cockroach images by default face upward
        let direction = Math.floor((Math.random() * 4) + 1);// var for deciding where cockroack spawns
        let cockroachImage = Math.floor((Math.random() * 2) + 1);
        let $cockroach = $("<img>");
        let axisY, axisX;
        $cockroach.addClass("cockroach");
        switch (direction) {
            case (1)://left to right
                if (cockroachImage == 1) {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach1LR.png");
                }
                else {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach2LR.png");

                }
                axisY = randomEnemy_PlaceY($cockroach);
                $cockroach.css("top", axisY + "px");
                $cockroach.css("left", 0 + "px");
                $("#sectionId").append($cockroach);
                $cockroach.animate({
                    left: (parseInt($("#sectionId").css("width"))) - (parseInt($cockroach.css("width"))) + "px"


                }, {
                        duration: cockroachSpeed,
                        easing: "linear",
                        progress: Clicked,
                        complete: deleteCockroach

                    });
                break;
            case (2)://right to left
                if (cockroachImage == 1) {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach1RL.png");
                }
                else {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach2RL.png");

                }
                axisY = randomEnemy_PlaceY($cockroach);
                $cockroach.css("top", axisY + "px");
                $cockroach.css("left", parseInt($("#sectionId").css("width"))) - (parseInt($cockroach.css("width")) + "px");
                $("#sectionId").append($cockroach);
                $cockroach.animate({
                    left: 0 + "px"


                }, {
                        duration: cockroachSpeed,
                        easing: "linear",
                        progress: Clicked,
                        complete: deleteCockroach

                    });
                break;

            case (3)://up to down
                if (cockroachImage == 1) {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach1UD.png");
                }
                else {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach2UD.png");

                }
                axisX = randomEnemy_PlaceX($cockroach);
                $cockroach.css("top", 0 + "px");
                $cockroach.css("left", axisX + "px");
                $("#sectionId").append($cockroach);
                $cockroach.animate({
                    top: (parseInt($("#sectionId").css("height"))) - (parseInt($cockroach.css("height"))) + "px"


                }, {
                        duration: cockroachSpeed,
                        easing: "linear",
                        progress: Clicked,
                        complete: deleteCockroach

                    });
                break;

            case (4)://down to up
                if (cockroachImage == 1) {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach1DU.png");
                }
                else {
                    $cockroach.attr("src", "/Pictures/Game_13/cockroach2DU.png");

                }
                axisX = randomEnemy_PlaceX($cockroach);
                $cockroach.css("top", (parseInt($("#sectionId").css("height"))) - (parseInt($("#heartDiv").css("height")) * 2) + "px");
                $cockroach.css("left", axisX + "px");
                $("#sectionId").append($cockroach);
                $cockroach.animate({
                    top: 0 + "px"


                }, {
                        duration: cockroachSpeed,
                        easing: "linear",
                        progress: Clicked,
                        complete: deleteCockroach

                    });
                break;
        }
    }
    // This funcion removes remaining hearts on screen and replaces them with an updated heart amount
    function RemoveHeart() {
        $("#heartDiv").empty();
        FillHearts();
    }
    // This function removes a "cockroach" image when it is clicked
    function Clicked() {
        $(this).unbind().click(function () {
            CreateSound();
            $(this).stop();
            $(this).remove();
            CreateLetter();

        });

    }
    //This function creates a "letter" image
    function CreateLetter() {
        let letterImage = Math.floor((Math.random() * validLetters.length) + 0);
        let $letter = $("<img>");
        $letter.attr("src", validLetters[letterImage]);
        $letter.addClass("letter");
        $("#sectionId").append($letter);
        let axisX = randomEnemy_PlaceX($letter);
        let axisY = randomEnemy_PlaceY($letter);
        $letter.css("left", axisX + "px");
        $letter.css("top", axisY + "px");

        $letter.animate({
            opacity: 0.4


        }, {

                duration: letterSpeed,
                easing: "linear",
                progress: LetterClicked,
                complete: deleteObject

            });

    }
    // This function increases the use score when a "letter" is clicked
    function LetterClicked() {
        $(this).unbind().click(function () {
            CreateSound();
            $(this).remove();
            $("#scoreId").text(parseInt($("#scoreId").text()) + 1);
            IncreaseChallenge();
        });
    }
    //This function increases the speed of appearing "cockroaches" and "letters"
    function IncreaseChallenge() {
        if (parseInt($("#scoreId").text()) == 10){
            clearInterval(gameoverIndicator);
            cockroachSpawn = cockroachSpawn - 500;
            cockroachSpeed = cockroachSpeed - 2000;
            gameoverIndicator = setInterval(createCockroach, cockroachSpawn);

        }
        if (parseInt($("#scoreId").text()) == 20) {
            clearInterval(gameoverIndicator);
            cockroachSpawn = cockroachSpawn - 500;
            cockroachSpeed = cockroachSpeed - 2000;
            gameoverIndicator = setInterval(createCockroach, cockroachSpawn);

        }
    }
    // This function returns a random axis y location on the section
    function randomEnemy_PlaceY(element) {
        let limitTop = 0;
        let limitDown = parseInt($("#sectionId").css("height")) - ((parseInt($("#heartDiv").css("height")))  * 2);
        return Math.floor((Math.random() * limitDown) + limitTop);
    }
    // This function returns a random axis x location on the section
    function randomEnemy_PlaceX(element) {
        let limitLeft = 0;
        let limitRight = parseInt($("#sectionId").css("width")) - ((parseInt($("#heartDiv").css("height"))) * 2);
        return Math.floor((Math.random() * limitRight) + limitLeft);
    }
    // This function creates a sound 
    function CreateSound() {
        if ($("#silenceBtn").val() == "🔔") {
            let $sound = $("<audio>");
            $sound.attr("src", "/Audio/Game_13/gun_fire2.mp3");
            $sound[0].play();
        }     
        
    }
    // This function ends all intervals of the game and allows the player to return to "Alphabet" page
    function GameOver() {
        $("#footerId").addClass("footerClass");
        $("#silenceBtn").remove();
        clearInterval(gameoverIndicator);
        $("#sectionId").addClass("hidescreen");
        $("#buttonRet").addClass("hidescreen");
        $("#finalScore").text($("#scoreId").text());
        $("#endGameScreen").removeClass("hidescreen");
    }
    // This function removes an object
    function deleteObject() {
        $(this).remove();
    }
    // This function removes a "cockroach" image
    function deleteCockroach() {
        $(this).remove();
        lives--;
        if (lives > 0) {
            RemoveHeart();
        }
        else {
            GameOver();
        }
    }
    // This function return the player to "Alphabet" page
    function GoToAlphabet() {
         window.location.href = "@(Url.Action("ReturnToAlphabet", "Child"))";
    }
    // This function changes the slience button's appearance
    function ChangeSilenceBtn() {
        if ($("#silenceBtn").val() == "🔔") {
            $("#silenceBtn").val("🔕");
        }
        else {
            $("#silenceBtn").val("🔔");
        }
        $("#silenceBtn").blur();
    }
    // This function sets the location of the image arrows
    function SetArrows() {
        let x = $("#instructionId").position();
        x = x.left - $("#leftArrow").width() - $("#instructionId").width();
        let x2 = $("#instructionId").position();
        x2 = x2.left + ($("#instructionId").width() * 2);
        $("#leftArrow").css("left", x + "px");
        $("#rightArrow").css("left", x2 + "px");
    }
    // This function enables the movement of the image arrows
    function MoveArrows() {
        let $leftArrow = $("#leftArrow");
        let left = $("#instructionId").width();
        let leftTarget = parseInt($leftArrow.css("left")) + left;
        $leftArrow.animate({

            left: leftTarget

        }, {
                duration: 500,
                easing: "linear",
                complete: SetArrows

            });
        let $rightArrow = $("#rightArrow");
        let right = $("#instructionId").width();
        let rightTarget = parseInt($rightArrow.css("left")) - right;
        $rightArrow.animate({

            left: rightTarget

        }, {
                duration: 500,
                easing: "linear",
                complete: SetArrows

            });
    }
    // This function stops the arrow animations and removes the arrows
    function RemoveArrows() {
        clearInterval(arrowInterval);
        $("#leftArrow").remove();
        $("#rightArrow").remove();
    }
</script>

<body>
    <div style="text-align:center">
        <h1 id="title" style="color:gold"> תפיסת מקקים </h1>
        <h2 id="secondTitle" style="color:gold"> עבור שמיעת הוראות המשחק לחץ על סימן השמיעה למטה, להתחלת המשחק לחץ על כפתור התחלה או אנטר</h2>
        <div id="arrowDiv">
            <img id="leftArrow" class="arrow" src="~/Pictures/Game_13/arrowLeft.png" />
            <i id="instructionId" class="fa fa-volume-up"></i>
            <img id="rightArrow" class="arrow" src="~/Pictures/Game_13/arrowRight.png" />
        </div>
        <input class="myButton" id="buttonId" type="button" value="התחלה" onclick="StartGame()" />
        <input class="myButton" id="buttonRet" type="button" value="חזור לאותיות" onclick="GoToAlphabet()" />
    </div>
    <section id="sectionId" class="w3-display-container	">
        <div id="heartDiv"></div>
        <div id="scoreDiv" class="w3-display-topleft"><p id="scoreId">0</p></div>
    </section>
    <div id="silenceDiv">
        <input id="silenceBtn" type="button" value="🔔" onclick="ChangeSilenceBtn()" />
    </div>
    <div style="z-index:90;text-align:center" id="endGameScreen" class="hidescreen">
        <h1 style="color:gold; font-size:60px"><b>ניקוד: </b><b><span id="finalScore"></span></b></h1>
        <input class="gameOverBtn, myButton" type="button" value="חזרה לעמוד אותיות" onclick="GoToAlphabet()" />
    </div>
    <footer id="footerId" style="text-align:center;font-size:x-small;display:block"><p>Ⓒ 2020 Learn-Hebrew</p></footer>

</body>