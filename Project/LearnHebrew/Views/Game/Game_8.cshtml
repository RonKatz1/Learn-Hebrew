@model LearnHebrew.Models.GameInformationModel
@{
    Layout = null;
}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>


    body {
        background-image: url('../../Pictures/Game_8/cartoon_grass.png');
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        cursor: url('../../Pictures/Game_8/target.png'),auto;
    }

    section {
        position: absolute;
        width: 100%;
        height: 35%;
        bottom: 0;
    }

    #endGameScreen {
        height: 50%;
    }

    .hidescreen {
        display: none;
    }

    .letter {
        width: 50px;
    }
    .sign {
        width: 100px;
    }
    #reverse {
        position: relative;
        margin: auto;
    }

    .slideUp {
        position: absolute;
        bottom: 0;
    }
   
 
    #imageId {
        width: 100px;
        height: 100px;
    }
    .gameOverBtn {
        margin-top: 10px;
    }
    #instructionId {
        color: gold;
        cursor: pointer;
    }
    .myButton {
        box-shadow: inset 0px 1px 0px 0px #f9eca0;
        background: linear-gradient(to bottom, #f0c911 5%, #f2ab1e 100%);
        background-color: #f0c911;
        border-radius: 6px;
        border: 1px solid #e65f44;
        cursor: pointer;
        color: #c92200;
        font-family: Arial;
        font-size: 15px;
        font-weight: bold;
        padding: 1px 6px;
        text-decoration: none;
        text-shadow: 0px 1px 0px #ded17c;
        margin-top: 10px;
        margin-bottom: 10px;
    }

        .myButton:hover {
            background: linear-gradient(to bottom, #f2ab1e 5%, #f0c911 100%);
            background-color: #f2ab1e;
        }
</style>
<script>
    let gameoverIndicator;// interval animation of spawning enemies
    let validLetters = [];// array of valid letter for the game, baed on the user
    let invalidLetters = [];// array of ןמvalid letter for the game, baed on the user
    let gameLetter = '@Model.Letter';// getting this game's letter
    let signPath;// this game's sign image path

    $(document).ready(function () {
        FillLetters();  
        LoadSoundAndPicture();
        GetSignPath();
        $("#imageId").click(function () {
            $("#imageId").slideUp();
            setTimeout(function () {
                $("#imageId").slideDown(1000);
            },2000)
        });
    })
    // This function gets this game's sign path
    function GetSignPath() {
        switch (gameLetter) {
            case 'א':
                signPath = "/Pictures/Game_8/signא.png";
                break;
            case 'ב':
                signPath = "/Pictures/Game_8/signב.png";
                break;
            case 'ג':
                signPath = "/Pictures/Game_8/signג.png";
                break;
            case 'ד':
                signPath = "/Pictures/Game_8/signד.png";
                break;
            case 'ה':
                signPath = "/Pictures/Game_8/signה.png";
                break;
            case 'ו':
                signPath = "/Pictures/Game_8/signו.png";
                break;
            case 'ז':
                signPath = "/Pictures/Game_8/signז.png";
                break;
            case 'ח':
                signPath = "/Pictures/Game_8/signח.png";
                break;
            case 'ט':
                signPath = "/Pictures/Game_8/signט.png";
                break;
            case 'י':
                signPath = "/Pictures/Game_8/signי.png";
                break;
            case 'כ':
                signPath = "/Pictures/Game_8/signכ.png";
                break;
            case 'ל':
                signPath = "/Pictures/Game_8/signל.png";
                break;
            case 'מ':
                signPath = "/Pictures/Game_8/signמ.png";
                break;
            case 'נ':
                signPath = "/Pictures/Game_8/signנ.png";
                break;
            case 'ס':
                signPath = "/Pictures/Game_8/signס.png";
                break;
            case 'ע':
                signPath = "/Pictures/Game_8/signע.png";
                break;
            case 'פ':
                signPath = "/Pictures/Game_8/signפ.png";
                break;
            case 'צ':
                signPath = "/Pictures/Game_8/signצ.png";
                break;
            case 'ק':
                signPath = "/Pictures/Game_8/signק.png";
                break;
            case 'ר':
                signPath = "/Pictures/Game_8/signר.png";
                break;
            case 'ש':
                signPath = "/Pictures/Game_8/signש.png";
                break;
            case 'ת':
                signPath = "/Pictures/Game_8/signת.png";
                break;
            default:
                signPath = "/Pictures/Game_8/cheese.png";
                break;
        }
    }
    //This function gets the path of the selected letter images
    function FillLetters() {
        $.ajax({
            url: '/Child/GetGameLetters' + '/' + '?Letter=@Model.Letter',           
            type: 'GET',
            dataType: 'json',
            error: function (e, ts, et) {
                alert("error at GetGameLetters" + ts);
            },
            success: function (data) {              
                for (let i = 0; i < 5; i++) {
                    validLetters.push("/Pictures/Alphabet/" + data.ValidLetterName[i]);                
                }
                for (let j = 0; j < data.InValidLetterName.length; j++) {
                    invalidLetters.push("/Pictures/Alphabet/" + data.InValidLetterName[j]); 
                }
            }
        });
    }
    // This funcion pre loads the sound and pictures of the game
    function LoadSoundAndPicture() {
        for (let i = 0; i < validLetters.length; i++) {
            fetch(validLetters[i]);
        }
        for (let j = 0; j < invalidLetters.length; j++) {
            fetch(invalidLetters[j]);
        }
    }
    // This function starts the game
    function StartGame() {
        gameoverIndicator = setInterval(CreateEnemy, 500);
        $("#buttonId").addClass("hidescreen");
    }
    // This function creates an "enemy" letter
    function CreateEnemy() {
        let imageType = Math.floor((Math.random() * 2) + 1);
        let $enemy = $("<img>");
        $enemy.addClass("slideUp");
        let x = Math.floor((Math.random() * (parseInt($("#reverse").css("width")) - 100) + 1));//100 is image size so need to be dynamic later
        let y = Math.floor((Math.random() * (parseInt($("#reverse").css("height")) - 100) + 1));
        $enemy.css("top", y + "px");
        $enemy.css("left", x + "px");
        $enemy.css("bottom", 0 + "px");
        $("#reverse").append($enemy);
        if (imageType == 1) {// the enemy is a letter
            $enemy.addClass("letter");
            var imagesrc = Math.floor((Math.random() * 10) + 1);
            if (imagesrc > 5) {// enemy is an image of a valid letter
                imagesrc = Math.floor((Math.random() * validLetters.length) + 0);
                $enemy.attr("src", validLetters[imagesrc]);
            }
            else {// enemy is an image of a invalid letter
                imagesrc = Math.floor((Math.random() * invalidLetters.length) + 0);
                $enemy.attr("src", invalidLetters[imagesrc]);
            }
            $enemy.animate({
                top: (parseInt($enemy.css("height"))) + "px"


            }, {
                    duration: 1500,
                    easing: "linear",
                    progress: Clicked,
                    complete: deleteObject

                });
        }
        else {// the enemy is a sign
            $enemy.attr("src", signPath);
            $enemy.addClass("sign");
            $enemy.unbind().click(function () {
                CreateSound();
                var temp = parseInt($("#scoreId").text()) + 1;
                $("#scoreId").text(temp);              
                $(this).remove();
            })
            setTimeout(function () {
                $enemy.slideUp(1500);
            }, 500)
        }

    }
   // This function enables a click on an enemy letter
    function Clicked() {
        let indicator = false;

        $(this).unbind().click(function () {
            CreateSound();
            for (var i = 0; i < validLetters.length; i++) {
                if ($(this).attr('src') == validLetters[i]) {
                    var temp = parseInt($("#scoreId").text()) + 1;
                    $("#scoreId").text(temp);
                    indicator = true;
                    break;
                }

            }
            if (!indicator) {
                $("#lifeId").text(parseInt($("#lifeId").text()) - 1);
            }
            if ($("#lifeId").text() == '0') {
                GameOver();
            }
            $(this).remove();
        });

    }
    // This function removes an object from the screen
    function deleteObject() {
        $(this).remove();
    }
    function GoToAlphabet() {
         window.location.href = "@(Url.Action("ReturnToAlphabet", "Child"))";
    }
    // This function creates sounds for the game
    function CreateSound() {
        let $sound = $("<audio>");
        $sound.attr("src", "/Audio/Game_8/gun_fire.mp3");

        $sound[0].play();
    }
    // This function ends the game
    function GameOver() {
        clearInterval(gameoverIndicator);
        $("#buttonRet").addClass("hidescreen");
        $("#reverse").addClass("hidescreen");
        $("#buttonId").addClass("hidescreen");
        $("#finalScore").text($("#scoreId").text());
        $("#endGameScreen").removeClass("hidescreen");
    }




</script>
<body>
    <div style="text-align:center">
        <h1 style="color:gold"> פגיעת אותיות מהאדמה </h1>
        <h2 style="color:gold">עבור שמיעת הוראות המשחק לחץ על סימן השמיעה למטה, להתחלת המשחק לחץ על כפתור התחלה</h2>
        <div><i id="instructionId" class="fa fa-volume-up"></i></div>
        <input id="buttonId" class="myButton" type="button" value="התחלה" onclick="StartGame()" />
        <input id="buttonRet" class="myButton"  type="button" value="חזרה לעמוד אותיות" onclick="GoToAlphabet()" />

    </div>
    <div id="info" style="text-align:center;padding-bottom:12%">
        <h2 style="color:goldenrod">  אות משחק זה היא @Model.Letter </h2>
        <h3 style="color:goldenrod">ניקוד: <span id="scoreId">0</span></h3>
        <h3 style="color:goldenrod">חיים: <span id="lifeId">5</span> </h3>
    </div>
    <section id="reverse"></section>
    <div style="z-index:90;text-align:center" id="endGameScreen" class="hidescreen">
        <input class="myButton" type="button" value="חזרה לעמוד אותיות" onclick="GoToAlphabet()" />
    </div>



</body>
